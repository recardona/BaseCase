(define (problem rob)
(:domain VBASE3)
(:objects ripley fox soldier blart paul main_screen cell_door armory_door exit_door entrance_door real_escape_door cell entrance hub jail armory dorm exit realescape cell_door_key )
(:init (connected cell jail) (connected hub dorm) (type realescape cave) (opens cell_door_key exit_door) (between real_escape_door cell realescape) (connected hub exit) (location dorm) (between entrance_door hub entrance) (between real_escape_door realescape cell) (at fox cell) (thing cell_door_key) (location exit) (character soldier) (door cell_door) (connected armory jail) (at cell_door_key entrance) (type soldier soldier) (character paul) (thing armory_door) (locked exit_door) (thing entrance_door) (type fox prisoner) (connected exit hub) (inventory) (type armory base) (connected jail armory) (between cell_door cell jail) (type jail base) (type entrance specialbase) (type ripley ripley) (between armory_door armory jail) (captor paul fox) (between cell_door jail cell) (nodoor dorm hub) (location cell) (thing exit_door) (character blart) (type real_escape_door door) (at soldier dorm) (connected jail cell) (connected jail hub) (at main_screen armory) (player ripley) (at paul armory) (connected cell realescape) (connected hub jail) (opens cell_door_key cell_door) (locked real_escape_door) (character fox) (at blart cell) (nodoor hub dorm) (connected realescape cell) (location jail) (type hub base) (type exit woods) (thing cell_door) (location armory) (captor blart fox) (connected entrance hub) (type cell_door_key keycard) (thing real_escape_door) (type blart soldier) (captor soldier fox) (type cell specialbase) (locked cell_door) (type paul soldier) (type dorm base) (between exit_door exit hub) (location hub) (computer main_screen) (type exit_door door) (character ripley) (at ripley jail) (connected hub entrance) (between exit_door hub exit) (type cell_door door) (connected dorm hub) (tied fox) (type armory_door door) (location entrance) (type entrance_door door) (door armory_door) (door entrance_door) (key cell_door_key) (nodoor jail hub) (between entrance_door entrance hub) (nodoor hub jail) (location realescape) (type main_screen computer) (door real_escape_door) (between armory_door jail armory) (door exit_door))
(:goal (AND (at soldier dorm) (at fox exit) (at ripley exit) (at blart entrance))))